name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  # Step 1: Build and Push Docker Image
  tag_and_push_image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Log in to Azure Container Registry (ACR) and build the Docker image
      - name: Log in to ACR
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          # Build and push the image with SHA tag
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/hello-service:${{ github.sha }} .
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/hello-service:${{ github.sha }}
          
          # Tag and push the image with 'latest' tag
          docker tag ${{ secrets.ACR_LOGIN_SERVER }}/hello-service:${{ github.sha }} ${{ secrets.ACR_LOGIN_SERVER }}/hello-service:latest
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/hello-service:latest

  # Step 2: Update Helm Chart and Deploy
  update-deployment-dev:
    needs: [tag_and_push_image]
    name: Deploy Image (Dev) - Helm Update (apps-manifest)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout selected ref
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Checkout apps-manifest Repository
      - uses: actions/checkout@v2
        with:
          repository: PandhuWibowo/apps-manifest
          path: apps-manifest  # Clone the apps-manifest repo into the apps-manifest folder
          fetch-depth: 1

      # Set up Azure CLI (Alternative Method)
      - name: Set up Azure CLI (Alternative Method)
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

      # Log in to Azure
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Get AKS Credentials
      - name: Get AKS Credentials
        run: |
          az aks get-credentials --resource-group operationtools-general --name operationtools-general-aks

      # Update Image Version in Helm Chart (values-dev.yaml)
      - name: Update Image Version in Helm Chart (values-dev.yaml)
        uses: fjogeleit/yaml-update-action@main
        with:
          valueFile: 'hello-service/values-dev.yaml'
          propertyPath: "image.tag"
          value: "latest"  # Set the image tag to 'latest'
          repository: PandhuWibowo/apps-manifest
          message: "chore(deploy): [Dev] Update hello-service image version to (latest)"
          createPR: true
          branch: main
          targetBranch: main
          workDir: apps-manifest  # Ensures we're working within the apps-manifest repo
          token: ${{ secrets.PAT_TOKEN }}
          
      - name: List files in the repository
        run: |
          ls -R ./apps-manifest

      - name: Check git status
        run: |
          git status
          git diff

      - name: Commit changes
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add ./apps-manifest/hello-service/values-dev.yaml
          git commit -m "chore: update hello-service image tag to latest"
          git push origin main

